;Proyecto Final E5

;-------------------PARA KIWI: CONEXIONES DE PINES-------------------------
;LEDS RGB ROJOS: PINES A2, A3, A4, A5 Y A6
;LEDS RGN AZULES: PINES A7, B0, B1, B2 Y B7
;SERVOMOTOR: PIN B6
;LEDS ROJOS: B4, B5, C4, C5 Y C6
;LEDS AZULES: C7, D6, E0, E1 Y E2
;MOTOR DC: E3

;CONFIGURAMOS EL RELOJ DE LA TIVA 
SYSCTL_RCGCGPIO_R		EQU		0x400FE608
;---------CONFIGURACIONES DEL PUERTO A---------
;MODO ANALOGICO
GPIO_PORTA_AMSEL_R 		EQU		0x40004528
;ESPECIFICACION DE DIRECCION 
GPIO_PORTA_DIR_R 		EQU		0x40004400
;FUNCIONES ALTERNATIVAS
GPIO_PORTA_AFSEL_R 		EQU		0x40004420
;HABILITA EL MODO DIGITAL
GPIO_PORTA_DEN_R		EQU		0x4000451C
;----------CONFIGURACIONES DEL PUERTO B------------
;MODO ANALOGICO
GPIO_PORTB_AMSEL_R 		EQU		0x40005528
;ESPECIFICACION DE DIRECCION 
GPIO_PORTB_DIR_R 		EQU		0x40005400
;DESACTIVAR FUNCIONES ALTERNATIVAS
GPIO_PORTB_PCTL_R		EQU		0X4000552C
;FUNCIONES ALTERNATIVAS
GPIO_PORTB_AFSEL_R 		EQU		0x40005420
;HABILITA EL MODO DIGITAL
GPIO_PORTB_DEN_R		EQU		0x4000551C
;----------CONFIGURACIONES DEL PUERTO C------------
;MODO ANALOGICO
GPIO_PORTC_AMSEL_R 		EQU		0x40006528
;ESPECIFICACION DE DIRECCION 
GPIO_PORTC_DIR_R 		EQU		0x40006400
;FUNCIONES ALTERNATIVAS
GPIO_PORTC_AFSEL_R 		EQU		0x40006420
;HABILITA EL MODO DIGITAL
GPIO_PORTC_DEN_R		EQU		0x4000651C
;----------CONFIGURACIONES DEL PUERTO D------------
;MODO ANALOGICO
GPIO_PORTD_AMSEL_R 		EQU		0x40007528
;ESPECIFICACION DE DIRECCION 
GPIO_PORTD_DIR_R 		EQU		0x40007400
;FUNCIONES ALTERNATIVAS
GPIO_PORTD_AFSEL_R 		EQU		0x40007420
;HABILITA EL MODO DIGITAL
GPIO_PORTD_DEN_R		EQU		0x4000751C
;----------CONFIGURACIONES DEL PUERTO E------------
;MODO ANALOGICO
GPIO_PORTE_AMSEL_R 		EQU		0x40024528
;ESPECIFICACION DE DIRECCION 
GPIO_PORTE_DIR_R 		EQU		0x40024400
;FUNCIONES ALTERNATIVAS
GPIO_PORTE_AFSEL_R 		EQU		0x40024420
;HABILITA EL MODO DIGITAL
GPIO_PORTE_DEN_R		EQU		0x4002451C
; ------------------------- Registro base del PWM0 0x4002.8000 --------------------------------	
RCGCPWM  				EQU 	0x400FE640 ; Registro de activaci?n de pwm b0: PWM modulo 0 , b1: PWM modulo 1
SYSCTL_RCC_R			EQU		0x400FE060 ; Configura el reloj del sistema y los osciladores, necesario para hacer la division del reloj del pwm
PWM0_GENA_R				EQU 	0x40028060 ; Contro del genrador de pwm0 A
PWM0_CTL_R				EQU 	0x40028040 ; Control del pwm0
PWM0_LOAD_R				EQU 	0x40028050 ; Carga del pwm0 A
PWM0_CMPA_R				EQU 	0x40028058 ; Comparador del pwm0 A
PWM_ENABLE_R			EQU 	0x40028008 ; Habilitaci?n del pwm
;-----------DIRECCIONES DE PINES--------------------
GPIO_PORTA26			EQU		0X400041F0
GPIO_PORTA77			EQU		0X40004200	;PINES A2, A3, A4, A5 Y A6: CAJAS A ; PIN A7 CAJAS B 
GPIO_PORTB03			EQU		0X4000503C  
GPIO_PORTB45			EQU		0X400050C0
GPIO_PORTB77			EQU		0X40005200 ;PINES B0, B1, B2 Y B7: CAJAS B , PINES B4, B5: STACK CAJAS A, PIN B6: PWM SERVOMOTOR
GPIO_PORTC46			EQU		0X400061C0 
GPIO_PORTC77			EQU		0X40006200 ;PINES C4, C5 Y C6: STACK CAJAS A, PIN C7: STACK CAJAS B
GPIO_PORTD66			EQU		0X40007100 ;PINES D6: STACK CAJAS B
GPIO_PORTE02			EQU		0X4002401C ;PIN E0, E1 Y E2: STACK CAJAS B	
GPIO_PORTE33			EQU		0X40024020 ;PIN E3: MOTOR DC
;----------------COSNTANTES DELAY LEDS----------------------------------	
CTEDELAY				EQU		4000000
CTEDELAY2				EQU		100000
; ------------------------- Constantes DELAY PWM --------------------------------		
CONST_DELAY_2S      	EQU 	8000000

		AREA	codigo, CODE, READONLY, ALIGN=2
		THUMB
		EXPORT	Start
			
Start

;ACA EMPEZAMOS LAS CONFIGURACIONES DE RELOJ PUERTOS Y LO QUE HAGA FALTA JEJE	
;RELOJ
	LDR 	R1, =SYSCTL_RCGCGPIO_R
	LDR 	R0, [R1]
	ORR		R0, R0, #0X1F ;EN BINARIO SERIA 00011111, DE LOS PUERTOS A UTILIZAR
	STR		R0, [R1]
	NOP 
	NOP
	NOP
;CONFIGA
	;DESACTIVA LA FUNCION ANALOGICA
	LDR		R1, =GPIO_PORTA_AMSEL_R
	LDR		R0, [R1]
	BIC		R0, R0, #0XFC ;11111100 CONFIGURA LOS PINES DESDE A2 AL A7 TODOS COMO SALIDAS
	STR		R0, [R1]
	;CONFIGURACION COMO I/O
	LDR		R1, =GPIO_PORTA_DIR_R
	LDR		R0, [R1]
	ORR		R0, R0, #0XFC ;SALIDAS, VALOR SEGUN EL NUMERO DE PUERTO [LA INSTRUCCION BIC VA CON ENTRADAS Y ORR CON SALIDAS]
	STR		R0, [R1]
	;DESHABILITA FUNCIONES ALTERNATIVAS
	LDR		R1, =GPIO_PORTA_AFSEL_R
	LDR		R0, [R1]
	BIC		R0, R0, #0XFC ;DESHABILITA LAS DEMAS FUNCIONES
	STR		R0, [R1]
	;HABILITA EL PUERTO COMO ENTRADA Y SALIDA DIGITAL
	LDR		R1, =GPIO_PORTA_DEN_R
	LDR		R0, [R1]
	ORR		R0, #0XFC ;ACTIVA EL PUERTO DIGITAL
	STR 	R0, [R1]	
;CONFIGB
	;inicializaci?n del reloj del PWM   
	LDR 	R1, =RCGCPWM 
	LDR 	R0, [R1]
	ORR 	R0, R0, #0x01 ;Activa el modulo 1 del reloj del PWM 
	STR 	R0, [R1]
	NOP
	NOP
	NOP
	;DESACTIVA LA FUNCION ANALOGICA
	LDR		R1, =GPIO_PORTB_AMSEL_R
	LDR		R0, [R1]
	BIC		R0, R0, #0XFF ;11111111 CONFIGURA LOS PINES DESDE A2 AL A7 TODOS COMO SALIDAS
	STR		R0, [R1]
	;CONFIGURACION COMO I/O
	LDR		R1, =GPIO_PORTB_DIR_R
	LDR		R0, [R1]
	ORR		R0, R0, #0XFF ;SALIDAS, VALOR SEGUN EL NUMERO DE PUERTO [LA INSTRUCCION BIC VA CON ENTRADAS Y ORR CON SALIDAS]
	STR		R0, [R1]
	;DESHABILITA FUNCIONES ALTERNATIVAS
	LDR		R1, =GPIO_PORTB_AFSEL_R
	LDR		R0, [R1]
	BIC		R0, R0, #0XBF ;DESHABILITA LAS DEMAS FUNCIONES
	STR		R0, [R1]
	;HABILITA LA FUNCION ALTERNATIVA DEL PIN B6
	LDR 	R1, =GPIO_PORTB_AFSEL_R
	LDR 	R0, [R1]
	ORR 	R0, R0, #0x40
	STR 	R0, [R1]
	; Habilita la funcion de pwm en el pin PB6
	LDR 	R1,	=GPIO_PORTB_PCTL_R
	LDR 	R0, [R1]
	ORR     R0, R0, #0x04000000
	STR 	R0, [R1]
	;HABILITA EL PUERTO COMO ENTRADA Y SALIDA DIGITAL
	LDR		R1, =GPIO_PORTB_DEN_R
	LDR		R0, [R1]
	ORR		R0, #0XFF ;ACTIVA EL PUERTO DIGITAL
	STR 	R0, [R1]	
;CONFIGC
	;DESACTIVA LA FUNCION ANALOGICA
	LDR		R1, =GPIO_PORTC_AMSEL_R
	LDR		R0, [R1]
	BIC		R0, R0, #0XF0 ;11110000 CONFIGURA LOS PINES DESDE A2 AL A7 TODOS COMO SALIDAS
	STR		R0, [R1]
	;CONFIGURACION COMO I/O
	LDR		R1, =GPIO_PORTC_DIR_R
	LDR		R0, [R1]
	ORR		R0, R0, #0XF0 ;SALIDAS, VALOR SEGUN EL NUMERO DE PUERTO [LA INSTRUCCION BIC VA CON ENTRADAS Y ORR CON SALIDAS]
	STR		R0, [R1]
	;DESHABILITA FUNCIONES ALTERNATIVAS
	LDR		R1, =GPIO_PORTC_AFSEL_R
	LDR		R0, [R1]
	BIC		R0, R0, #0XF0 ;DESHABILITA LAS DEMAS FUNCIONES
	STR		R0, [R1]
	;HABILITA EL PUERTO COMO ENTRADA Y SALIDA DIGITAL
	LDR		R1, =GPIO_PORTC_DEN_R
	LDR		R0, [R1]
	ORR		R0, #0XF0 ;ACTIVA EL PUERTO DIGITAL
	STR 	R0, [R1]	
;CONFIGD
	;DESACTIVA LA FUNCION ANALOGICA
	LDR		R1, =GPIO_PORTD_AMSEL_R
	LDR		R0, [R1]
	BIC		R0, R0, #0X40 ;01000000
	STR		R0, [R1]
	;CONFIGURACION COMO I/O
	LDR		R1, =GPIO_PORTD_DIR_R
	LDR		R0, [R1]
	ORR		R0, R0, #0X40 ;SALIDAS, VALOR SEGUN EL NUMERO DE PUERTO [LA INSTRUCCION BIC VA CON ENTRADAS Y ORR CON SALIDAS]
	STR		R0, [R1]
	;DESHABILITA FUNCIONES ALTERNATIVAS
	LDR		R1, =GPIO_PORTD_AFSEL_R
	LDR		R0, [R1]
	BIC		R0, R0, #0X40 ;DESHABILITA LAS DEMAS FUNCIONES
	STR		R0, [R1]
	;HABILITA EL PUERTO COMO ENTRADA Y SALIDA DIGITAL
	LDR		R1, =GPIO_PORTD_DEN_R
	LDR		R0, [R1]
	ORR		R0, #0X40 ;ACTIVA EL PUERTO DIGITAL
	STR 	R0, [R1]	
;CONFIGE
	;DESACTIVA LA FUNCION ANALOGICA
	LDR		R1, =GPIO_PORTE_AMSEL_R
	LDR		R0, [R1]
	BIC		R0, R0, #0X0F ;00001111 
	STR		R0, [R1]
	;CONFIGURACION COMO I/O
	LDR		R1, =GPIO_PORTE_DIR_R
	LDR		R0, [R1]
	ORR		R0, R0, #0X0F ;SALIDAS, VALOR SEGUN EL NUMERO DE PUERTO [LA INSTRUCCION BIC VA CON ENTRADAS Y ORR CON SALIDAS]
	STR		R0, [R1]
	;DESHABILITA FUNCIONES ALTERNATIVAS
	LDR		R1, =GPIO_PORTE_AFSEL_R
	LDR		R0, [R1]
	BIC		R0, R0, #0X0F ;DESHABILITA LAS DEMAS FUNCIONES
	STR		R0, [R1]
	;HABILITA EL PUERTO COMO ENTRADA Y SALIDA DIGITAL
	LDR		R1, =GPIO_PORTE_DEN_R
	LDR		R0, [R1]
	ORR		R0, #0X0F ;ACTIVA EL PUERTO DIGITAL
	STR 	R0, [R1]	
;-----------------------------------------Configuraci?n del PWM1-------------------------------------------------
	; Activa el divisor de reloj para el PWM
	LDR 	R1, =SYSCTL_RCC_R
	LDR 	R0, [R1]
	ORR 	R0, R0, #0x0100000
	STR 	R0, [R1]
	; Divide la frecuencia de reloj entre 64 para ser de 250kHz
	LDR 	R1, =SYSCTL_RCC_R
	LDR 	R0, [R1]
	ORR 	R0, R0, #0x0E0000
	STR 	R0, [R1]
	; [3:2]Cuando el contador = LOAD pwmA estado Alto, cuando el contador disminuya pwmA estado bajo
	LDR 	R1, =PWM0_GENA_R
	LDR 	R0, [R1]
	ORR 	R0, R0, #0x0C8  ;Cuando el contador == PWM_LOAD el PWM esta en bajo
	STR 	R0, [R1]		  ;Cuando el contador == comparador A durante la cuenta regresiva el PWM esta en alto
	; Carga el valor de 5000 para un periodo de 20ms
	LDR 	R1, =PWM0_LOAD_R
	LDR 	R0, [R1]
	MOV 	R0,	#5000
	STR 	R0,	[R1]
	; Compara el valor de GENA con el de LOAD
	LDR 	R1,	=PWM0_CMPA_R  ; El contador esta configurado en modo descendente por lo tanto
	LDR 	R0,	[R1]          ; el valor a cargar en el comparador es (100%-%requerido)PWMLOAD
	LDR 	R3,	=375          ; 0 grados del servo
	ORR 	R0, R0,	R3
	STR 	R0,	[R1]
	LDR 	R3,	=0
	; Habilitar el modulo PWM e inicia el contador 
	LDR 	R1,	=PWM0_CTL_R   ; [1]=0,habilita el modo de conteo descendente desde el valor de PWMLOAD hasta 0 y se reinica
	LDR 	R0,	[R1]          ; y [0]=1,habilita el bloque generador de pwm.
	ORR 	R0, R0,	#0x01
	STR 	R0, [R1]
	; Habilitar el pin de salida PWM
	LDR 	R1,=PWM_ENABLE_R
	LDR 	R0,	[R1]
	ORR 	R0, R0,	#0x01
	STR 	R0, [R1]
	B		INIT
	LTORG

DELAY ;DELAY MAS LARGO PARA LOS ENCENDIDOS 

 	SUB		R10, #1 ;LE RESTA UNO AL VALOR DE R10 POR CADA CICLO DE RELOJ
	CMP		R10, #0 ;COMPARA SI EL VALOR DE R10 ES IGUAL A 0
	BNE		DELAY ;SI EL VALOR DE R10 NO ES 0 SE REGRESA A LA SUBRUTINA DELAY
	BX		LR
	
DELAY2 ;DELAY MAS CORTO PARA LOS APAGADOS

 	SUB		R11, #1 ;LE RESTA UNO AL VALOR DE R10 POR CADA CICLO DE RELOJ
	CMP		R11, #0 ;COMPARA SI EL VALOR DE R10 ES IGUAL A 0
	BNE		DELAY2 ;SI EL VALOR DE R10 NO ES 0 SE REGRESA A LA SUBRUTINA DELAY
	BX		LR	

INIT ;ACA VAMOS A MONITORIAR SI EL PUSH DEL PUERTO E0 HA SIDO PULSADO O NO PARA DAR INICIO AL PROGRAMA 

	LDR 	R4, =PWM0_CMPA_R
	LDR 	R5, =0
	LDR		R8, =0
	LDR		R9, =0
	LDR		R10, =CTEDELAY ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	LDR		R11, =CTEDELAY2 ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY2
	
	;ACTIVACION DE MOTOR DC DE BANDA TRANSPORTADORA: 
	LDR		R3, =GPIO_PORTE33
	MOV		R2, #0X08 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	NOP	
	;LDR		R10, =CTEDELAY ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	;BL 		DELAY

	;PRUEBA LEDs
	;LDR		R3, =GPIO_PORTE02
	;MOV		R2, #0X07 ;ENCENDEMOS EL BIT
	;STR		R2, [R3]
	;NOP
	;NOP	
	;LDR		R10, =CTEDELAY ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	;BL 		DELAY
	;LDR		R3, =GPIO_PORTE02 
	;MOV		R2, #0X00 ;ENCENDEMOS EL BIT
	;STR		R2, [R3]
	;NOP
	;NOP
	;B		SEC1 ; AGREGAR UN BEQ SI LA CONDICION SE CUMPLE 

SEC1

	;ACTIVACION DE MOTOR DC DE BANDA TRANSPORTADORA: 
	LDR		R3, =GPIO_PORTE33
	MOV		R2, #0X08 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	NOP	
	;COMENZAMOS ENCENCDIENDO EL LED DE LA CAJA A
	;ENCENDEMOS A2
	LDR		R3, =GPIO_PORTA26 ;PIN A2
	MOV		R2, #0X04 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	BL		DELAY
	
	;PROCEDEMOS A APAGAR EL PIN DE LA CAJA A A ENCENDER EL DE LA CAJA B Y CORRER EL PIN DE LA CAJA A
	;APAGAMOS A2
	LDR		R3, =GPIO_PORTA26
	MOV		R2, #0X00 ;APAGAMOS LOS BITS
	STR		R2, [R3]
	LDR		R11, =CTEDELAY2 ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL 		DELAY2
	
	;ENCENDEMOS A3 --> A7
	LDR		R3, =GPIO_PORTA26 ;PIN A3
	MOV		R2, #0X08 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	LDR		R3, =GPIO_PORTA77 ;PIN A7
	MOV		R2, #0X80 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	LDR		R10, =CTEDELAY ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL		DELAY	
	
	;APAGAMOS TODO EL PUERTO A
	LDR		R3, =GPIO_PORTA26
	MOV		R2, #0X00 ;APAGAMOS LOS BITS
	STR		R2, [R3]
	NOP
	LDR		R3, =GPIO_PORTA77
	MOV		R2, #0X00 ;APAGAMOS LOS BITS
	STR		R2, [R3]
	LDR		R11, =CTEDELAY2 ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL 		DELAY2
	
	;PROCEDEMOS A CONTINUAR CON LA SECUENCIA
	;ENCENDEMOS A4 --> B0 --> A2
	
	LDR		R3, =GPIO_PORTB03 ;PIN B0
	MOV		R2, #0X01 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	LDR		R3, =GPIO_PORTA26 ;PIN A2
	MOV		R2, #0X14 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	LDR		R10, =CTEDELAY ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL		DELAY
	
	;APAGAMOS EL PUERTO A Y B
	LDR		R3, =GPIO_PORTA26
	MOV		R2, #0X00 ;APAGAMOS LOS BITS
	STR		R2, [R3]
	NOP
	LDR		R3, =GPIO_PORTB03
	MOV		R2, #0X00 ;APAGAMOS LOS BITS
	STR		R2, [R3]
	LDR		R11, =CTEDELAY2 ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL 		DELAY2
	
	;ENCENDEMOS A5 --> B1 --> A3 --> A7
	LDR		R3, =GPIO_PORTB03 ;B1 
	MOV		R2, #0X02 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	LDR		R3, =GPIO_PORTA26 ;PIN A3 
	MOV		R2, #0X28 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	LDR		R3, =GPIO_PORTA77 ;PIN A7 
	MOV		R2, #0X80 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	LDR		R10, =CTEDELAY ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL		DELAY
	
	;APAGAMOS EL PUERTO A Y B
	LDR		R3, =GPIO_PORTA26
	MOV		R2, #0X00 ;APAGAMOS LOS BITS
	STR		R2, [R3]
	NOP
	LDR		R3, =GPIO_PORTA77
	MOV		R2, #0X00 ;APAGAMOS LOS BITS
	STR		R2, [R3]
	NOP
	LDR		R3, =GPIO_PORTB03
	MOV		R2, #0X00 ;APAGAMOS LOS BITS
	STR		R2, [R3]
	LDR		R11, =CTEDELAY2 ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL 		DELAY2
	NOP
	NOP
	B		SEC2
	
SEC2

	;ACTIVACION DE MOTOR DC DE BANDA TRANSPORTADORA: 
	LDR		R3, =GPIO_PORTE33
	MOV		R2, #0X08 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	NOP	
	;EN ESTE APARTADO ES DONDE NOS VAMOS A QUEDAR ENCLAVADOS DANDO UN FLUJO CONSTANTE AL MOVIMIENTO DE LOS LEDs
	;ENCENDEMOS A6 --> B2 --> A4 --> B0 --> A2
	LDR		R3, =GPIO_PORTB03 ;PIN B0
	MOV		R2, #0X05 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	LDR		R3, =GPIO_PORTA26 ;PIN A2
	MOV		R2, #0X54 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	LDR		R10, =CTEDELAY ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL		DELAY	
	
	;ACA HACEMOS LA SELECCION DE LA CAJA MOVIENDO EL SERVOMOTOR A -45 GRADOS
	LDR 	R5, =475
	MOV 	R0, R5
	STR 	R0, [R4]
	LDR 	R10, =CONST_DELAY_2S 	; retraso de 1a CONST_DELAY_100mS   CONST_DELAY_2S
	BL 		DELAY
	
	;APAGAMOS LOS PUERTOS A Y B
	LDR		R3, =GPIO_PORTA26
	MOV		R2, #0X00 ;APAGAMOS LOS BITS
	STR		R2, [R3]
	NOP
	LDR		R3, =GPIO_PORTB03
	MOV		R2, #0X00 ;APAGAMOS LOS BITS
	STR		R2, [R3]
	LDR		R11, =CTEDELAY2 ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL 		DELAY2
	;TENEMOS QUE HACER UN BRUNCH PARA INICIAR EL CONTADOR DE LAS CAJAS
	BL		CON1

;#########################################################################################
SEC3
	
	;ACTIVACION DE MOTOR DC DE BANDA TRANSPORTADORA: 
	LDR		R3, =GPIO_PORTE33
	MOV		R2, #0X08 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	NOP	
	;TENEMOS QUE HACER UN BRUNCH PARA INICIAR EL CONTADOR DE LAS CAJAS A
	;ENCENDEMOS D7 --> A5 --> B1 --> A3 --> A7
	LDR		R3, =GPIO_PORTB77 ;PIN B7 
	MOV		R2, #0X80 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	LDR		R3, =GPIO_PORTB03 ;PIN B1
	MOV		R2, #0X02 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	LDR		R3, =GPIO_PORTA26 ;PIN A3 
	MOV		R2, #0X28 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	LDR		R3, =GPIO_PORTA77 ;PIN A7 
	MOV		R2, #0X80 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	LDR		R10, =CTEDELAY ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL		DELAY
	
	;ACA HACEMOS LA SELECCION DE LA CAJA MOVIENDO EL SERVOMOTOR A +45 GRADOS
	LDR 	R5,	=275
	MOV 	R0,	R5
	STR 	R0,	[R4]
	LDR 	R10, =CONST_DELAY_2S 	; retraso de 1a CONST_DELAY_100mS   CONST_DELAY_2S
	BL 		DELAY
	
	;APAGAMOS LOS PUERTOS A Y B
	LDR		R3, =GPIO_PORTA26
	MOV		R2, #0X00 ;APAGAMOS LOS BITS
	STR		R2, [R3]
	NOP
	LDR		R3, =GPIO_PORTA77
	MOV		R2, #0X00 ;APAGAMOS LOS BITS
	STR		R2, [R3]
	NOP
	LDR		R3, =GPIO_PORTB03
	MOV		R2, #0X00 ;APAGAMOS LOS BITS
	STR		R2, [R3]
	NOP
	LDR		R3, =GPIO_PORTB77
	MOV		R2, #0X00 ;APAGAMOS LOS BITS
	STR		R2, [R3]
	LDR		R11, =CTEDELAY2 ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL 		DELAY2
	
	;TENEMOS QUE HACER UN BRUNCH PARA INICIAR EL CONTADOR DE LAS CAJAS
	BL		CON2

CON1

	ADD		R8, R8, #1
	CMP		R8, #1
	BEQ		LOTE_A1
	CMP		R8, #2
	BEQ		LOTE_A2
	CMP		R8, #3
	BEQ		LOTE_A3
	CMP		R8, #4
	BEQ		LOTE_A4
	CMP		R8, #5
	BEQ		LOTE_A5
	
CON2
	
	ADD		R9, R9, #1
	CMP		R9, #1
	BEQ		LOTE_B1
	CMP		R9, #2
	BEQ		LOTE_B2
	CMP		R9, #3
	BEQ		LOTE_B3
	CMP		R9, #4
	BEQ		LOTE_B4
	CMP		R9, #5
	BEQ		LOTE_B5
	
LOTE_A1

	LDR		R3, =GPIO_PORTB45
	MOV		R2, #0X10 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	LDR		R11, =CTEDELAY2 ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL		DELAY2
	BL		SEC3

LOTE_A2

	LDR		R3, =GPIO_PORTB45 
	MOV		R2, #0X30 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	NOP
	LDR		R11, =CTEDELAY2 ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL		DELAY2
	BL		SEC3
	
LOTE_A3

	LDR		R3, =GPIO_PORTC46 
	MOV		R2, #0X10 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	NOP
	LDR		R11, =CTEDELAY2 ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL		DELAY2
	BL		SEC3
	
LOTE_A4

	LDR		R3, =GPIO_PORTC46
	MOV		R2, #0X30 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	NOP
	LDR		R11, =CTEDELAY2 ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL		DELAY2
	BL		SEC3
	
LOTE_A5

	LDR		R3, =GPIO_PORTC46 
	MOV		R2, #0X70 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	NOP
	LDR		R10, =CTEDELAY ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL		DELAY
	BL		VAC_A
	
LOTE_B1

	LDR		R3, =GPIO_PORTC77
	MOV		R2, #0X80 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	NOP
	LDR		R11, =CTEDELAY2 ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL		DELAY2
	BL 		SEC2
	
LOTE_B2

	LDR		R3, =GPIO_PORTD66
	MOV		R2, #0X40 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	NOP
	LDR		R11, =CTEDELAY2 ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL		DELAY2
	BL		SEC2
	
LOTE_B3

	LDR		R3, =GPIO_PORTE02 
	MOV		R2, #0X01 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	NOP
	LDR		R11, =CTEDELAY2 ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL		DELAY2
	BL		SEC2
	
LOTE_B4

	LDR		R3, =GPIO_PORTE02
	MOV		R2, #0X03 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	NOP
	LDR		R11, =CTEDELAY2 ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL		DELAY2
	BL		SEC2
	
LOTE_B5

	LDR		R3, =GPIO_PORTE02
	MOV		R2, #0X07 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	NOP
	LDR		R10, =CTEDELAY ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL		DELAY
	BL		VAC_B
	
;A CONTINUACION VACIAMOS LOS CONTENEDORES CUANDO TENEMOS LAS 5 CAJAS EN CADA UNO

VAC_A

	LDR		R3, =GPIO_PORTB45
	MOV		R2, #0X00 ;APAGAMOS LOS BITS
	STR		R2, [R3]
	NOP
	LDR		R3, =GPIO_PORTC46
	MOV		R2, #0X00 ;APAGAMOS LOS BITS
	STR		R2, [R3]
	NOP
	NOP
	LDR		R3, =GPIO_PORTE33
	MOV		R2, #0X00 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	NOP
	LDR		R10, =10000000 ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL		DELAY
	LDR		R8, =0
	BL		SEC3
	
VAC_B

	LDR		R3, =GPIO_PORTC77
	MOV		R2, #0X00 ;APAGAMOS LOS BITS
	STR		R2, [R3]
	NOP
	LDR		R3, =GPIO_PORTD66 
	MOV		R2, #0X00 ;APAGAMOS LOS BITS
	STR		R2, [R3]
	NOP
	LDR		R3, =GPIO_PORTE02
	MOV		R2, #0X00 ;APAGAMOS LOS BITS
	STR		R2, [R3]
	NOP
	NOP
	LDR		R3, =GPIO_PORTE33
	MOV		R2, #0X00 ;ENCENDEMOS EL BIT
	STR		R2, [R3]
	NOP
	NOP
	LDR		R10, =10000000 ;ACA DEFINI EL REGISTRO QUE LLEVARA LA CONSTANTE DEL DELAY
	BL		DELAY
 	LDR		R9, =0
	BL		SEC2 
	
	ALIGN
	END